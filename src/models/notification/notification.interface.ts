import { INotificationData } from './notification-data.interface';
import { INotificationRecipient } from './notification-recipient.interface';
import { INotificationRequestor } from './notification-requestor.interface';
import {
  INotificationInternalResult,
  INotificationOutboundResult,
} from './notification-result.interface';
import { NotificationStatus } from './notification-status.enum';
import { NotificationType } from './notification-type.enum';
/**
 * Primary notification interface
 */
export interface INotification {
  /** Primary mongo object id of notification */
  _id: string;
  /** How end-user has thus far interacted with notification */
  status: NotificationStatus;
  /** Type of notification. Used to control back-end business logic and front-end UI */
  notificationType: NotificationType;
  /** Primary message content of notification, if needed */
  message?: string;
  /** Created at date. Uses UTC timestamp */
  createdAt: Date; // UTC timestamp
  /** Updated at date. Uses UTC timestamp */
  updatedAt?: Date; // UTC timestamp
  /** Target recipient of notification. */
  recipient: INotificationRecipient;
  /** Requestor of notification. Left optional in case notification is event type generated by app itself instead of user.*/
  requestor?: INotificationRequestor;
  /** Results of out-of-app notification sending. Always sent in app, but can sent to email as well (if allowed). SMS/mobile implementation pending. */
  outbound?: INotificationOutboundResult;
  /** Results of internal salient teams notifcation (if needed). (EG: sales might need to be notified for request-quote notification)*/
  internal?: INotificationInternalResult;
  /** Extra internal metadata for processing notification. */
  data?: INotificationData;
}
